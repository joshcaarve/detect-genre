{"ast":null,"code":"var _jsxFileName = \"/Users/jbrard/CodeProjects/detect-genre/frontend/my-app/src/App.tsx\";\nimport React, { Component } from 'react'; // let's also import Component\n// the clock's state has one field: The current time, based upon the\n// JavaScript class Date\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Clock has no properties, but the current state is of type ClockState\n// The generic parameters in the Component typing allow to pass props\n// and state. Since we don't have props, we pass an empty object.\nexport class App extends Component {\n  // The tick function sets the current state. TypeScript will let us know\n  // which ones we are allowed to set.\n  tick() {\n    this.setState({\n      time: new Date()\n    });\n  } // After the component did mount, we set the state each second.\n\n\n  componentDidMount() {\n    setInterval(() => this.tick(), 1000);\n  } // render will know everything!\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The current time is \", this.state.time.toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/jbrard/CodeProjects/detect-genre/frontend/my-app/src/App.tsx"],"names":["React","Component","App","tick","setState","time","Date","componentDidMount","setInterval","render","state","toLocaleTimeString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAA0C;AAE1C;AACA;;;AAKA;AACA;AACA;AACA,OAAO,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAEjC;AACA;AACAE,EAAAA,IAAI,GAAG;AACL,SAAKC,QAAL,CAAc;AACZC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADM,KAAd;AAGD,GARgC,CAUjC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,WAAW,CAAC,MAAM,KAAKL,IAAL,EAAP,EAAoB,IAApB,CAAX;AACD,GAbgC,CAejC;;;AACAM,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,yCAAwB,KAAKC,KAAL,CAAWL,IAAX,CAAgBM,kBAAhB,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAlBgC;AAqBnC,eAAeT,GAAf","sourcesContent":["import React, { Component } from 'react'; // let's also import Component\n\n// the clock's state has one field: The current time, based upon the\n// JavaScript class Date\ntype ClockState = {\n  time: Date\n}\n\n// Clock has no properties, but the current state is of type ClockState\n// The generic parameters in the Component typing allow to pass props\n// and state. Since we don't have props, we pass an empty object.\nexport class App extends Component {\n\n  // The tick function sets the current state. TypeScript will let us know\n  // which ones we are allowed to set.\n  tick() {\n    this.setState({\n      time: new Date()\n    });\n  }\n\n  // After the component did mount, we set the state each second.\n  componentDidMount() {\n    setInterval(() => this.tick(), 1000);\n  }\n\n  // render will know everything!\n  render() {\n    return <p>The current time is {this.state.time.toLocaleTimeString()}</p>\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}